!!! 5
%html(lang="en-US")
  %head
    %title Authem, an Email-Based Authentication Library for Ruby Web Apps
    %meta(charset="UTF-8")
    -# %meta{:name => "viewport", :content => "width=device-width, initial-scale=.7, maximum-scale=1"}
    /[if IE]
      = javascript_include_tag "html5"
    = stylesheet_link_tag "application"
  %body

    %header
      .wrapper
        %h1 Authem

    %section.content
      .wrapper

        %h2.box An Email-Based Authentication Library for Ruby Web Apps

        .intro.box
          %p
            Authem is an email-based authentication library for Ruby web applications. It
            %em only
            supports email/password authentication. It does not automatically integrate with Twitter, Facebook, or whatever OAuth or SSO service you like the best. It is meant to handle user security but allow you to fully customize your user account behavior because the code is all yours.

        .left_callout.box
          %h5 Compatibility
          %p Authem requires Rails 4 and is actively tested against Ruby 2.0.0 and 2.1.1.

        .right_callout.box
          %h5 Code Quality
          = link_to "http://travis-ci.org/paulelliott/authem", target: :_blank do
            = image_tag "https://api.travis-ci.org/paulelliott/authem.png", alt: "Build status"
          = link_to "https://codeclimate.com/github/paulelliott/authem", target: :_blank do
            = image_tag "https://codeclimate.com/github/paulelliott/authem.png", alt: "Code Climate score"

        .installation.box
          %h3 Installation

          %p Add the following to your project&rsquo;s Gemfile:
          %pre
            %code
              gem 'authem'

          %p Run the generators to create the tables for users and sessions.
          %pre
            %code
              :preserve
                rails g authem:user
                rails g authem:session

          %p Tell your controllers what model you are using authem with.
          %pre
            %code
              :preserve
                class ApplicationController < ActionController::Base
                  authem_for :user
                  ...

          %p Tell your model just how authem it is.
          %pre.nomargin-bottom
            %code
              :preserve
                class User < ActiveRecord::Base
                  include Authem::User
                  ...

        .usage.box
          %h3 Usage

          %article.nomargin-bottom
            %h4 Model Usage

            %p You can make users the normal way. Passwords will automatically be salted and bcrypted.

            %pre
              %code
                :preserve
                  User.new(
                    email: 'matt@example.com',
                    password: '$ushi',
                    password_confirmation: '$ushi'
                  )

            %p Resetting passwords has never been easier.

            %pre
              %code user.reset_password('new_password', 'new_password')

            %p You will also always have a token available when you need to reset passwords.

            %pre
              %code user.password_reset_token

          %article.nomargin-bottom
            %h4 Controller Usage

            %p In your application controller:
            %pre
              %code authem_for :user

            %p Which gives you access to:

            %ul
              %li
                %code sign_in(user)
              %li
                %code sign_out_user
              %li
                %code current_user
              %li
                %code require_user
              %li
                %code user_signed_in?
              %li
                %code redirect_back_or_to(some_awesome_default_path)
              %li
                %code clear_all_sessions_for(user)

            %p Then require authentication in your controllers with a filter:
            %pre
              %code before_filter :require_user

            %p For signing in/out users, try a SessionsController like this:
            %pre
              %code
                :preserve
                  class SessionsController < ApplicationController

                    def create
                      user = User.find_by(email: params[:email].downcase)
                      if user && user.authenticate(params[:password])
                        sign_in(user)
                        redirect_back_or_to(root_path)
                      else
                        flash.now.alert = "Your email and password do not match"
                        render :new
                      end
                    end

                    def destroy
                      sign_out_user
                      redirect_to :root
                    end

                  end

            %p Resetting passwords could look something like this:
            %pre.nomargin-bottom
              %code
                :preserve
                  class PasswordResetsController < ApplicationController

                    before_filter :verify_user, only: [:edit, :update]

                    def create
                      if user = User.find_by(email: params[:email].downcase)
                        UserMailer.reset_password_email(user)
                      end

                      redirect_to [:new, :password_reset], alert: "Instructions for resetting your password have been sent."
                    end

                    def update
                      if user_by_token.reset_password(params[:password], params[:password_confirmation])
                        sign_in(user_by_token)
                        redirect_to :root
                      else
                        render :edit
                      end
                    end

                    protected

                    def user_by_token
                      @user_by_token ||= User.find_by_reset_password_token(params[:id])
                    end

                    def verify_user
                      unless user_by_token
                        redirect_to [:new, :password_reset], alert: "We can't find your account with that token."
                      end
                    end

                  end

        .contribute.box
          %h3 Contribute
          %p
            Authem&rsquo;s source code is
            = succeed '.' do
              = link_to "available on Github", "https://github.com/paulelliott/authem", target: :_blank
          %p Pull requests are welcome; please provide spec coverage for new code.

          %ul.nomargin-bottom
            %li
              %code bundle
            %li.nomargin-bottom
              %code rake

        .credits.box
          %p
            Developed &amp; maintained by
            = link_to "Paul Elliott", "https://www.github.com/paulelliott", target: :_blank
            &amp;
            = link_to "Pavel Pravosud", "https://www.github.com/rwz", target: :_blank
          %p
            Designed by
            = link_to "Rye Mason", "https://www.twitter.com/ryenotbread", target: :_blank
            at
            =link_to "Hashrocket", "http://www.hashrocket.com", target: :_blank
